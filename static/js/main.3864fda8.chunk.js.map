{"version":3,"sources":["components/Button.js","components/navbar/MenuItems.js","components/navbar/Navbar.js","components/HomeBox.js","components/Feed.js","components/IndexBar.js","pages/index.js","components/BarChart.js","pages/portfolio-dashboard.js","components/IntervalButton.js","components/LineChart.js","pages/stock-research.js","pages/images/spreadsheet-example.JPG","pages/images/debugging-columns.JPG","pages/images/data-table.JPG","pages/images/data-graph.JPG","pages/import-file.js","App.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","MenuItems","title","url","cName","Navbar","state","clicked","handleClick","setState","this","map","item","index","href","to","Component","HomeBox","e","preventDefault","console","log","props","window","open","focus","handleMouseOver","target","style","color","handleMouseOut","src","image_url","alt","onMouseOver","onMouseOut","description","source","Feed","box0","snippet","box1","box2","rebelInvestorBox","a","params","api_token","symbols","limit","fetch","method","then","response","json","data","IndexBar","live_stanPoor","stanPoor","prev_stanPoor","live_dow","dow","prev_dow","live_nasdaq","nasdaq","prev_nasdaq","marketStatus","loading","mode","headers","diffStanPoor","toFixed","percStanPoor","diffDow","percDow","diffNasdaq","percNasdaq","Home","BarChart","list","accountType","dateOfTransaction","amount","typeOfTransaction","newTransaction","dates","amountList","colors","key","value","id","indexToRemove","findIndex","x","dateToRemove","dateIndex","indexOf","amountToRemove","amountIndex","parseInt","updatedList","filter","updatedDates","updatedAmounts","updatedData","updatedColors","j","length","push","i","k","amountTotal","date","Date","Math","random","toUpperCase","allData","dateList","negativeAmount","parseFloat","sortedData","sort","b","obj","toISOString","slice","labels","datasets","backgroundColor","options","maintainAspectRatio","responsive","legend","display","plugins","scales","xAxes","height","width","placeholder","onChange","updateInput","addTransaction","removeTransaction","PortfolioDashboard","justifyContent","alignItems","IntervalButton","LineChart","ticket","interval","stockPrice","companyName","validTicket","weekRange","prevClose","ask","bid","dayRange","yTargetEst","averageVolume","volume","marketCap","eps","forwardDividend","peRatio","beta","earningsDate","exDividendDate","handleChange","bind","handleSubmit","attribute","onSubmit","handleInterval","borderColor","fill","label","StockResearch","EXTENSIONS","File","useState","colDefs","setColDefs","setData","input","setInput","setDates","numberAccounts","setNumberAccounts","convertToJson","rows","forEach","row","rowData","element","toLowerCase","converted_date","round","day","String","split","month","toString","year","ExcelDateToJSDate","returnTotal","total","Object","keys","rateArray","totalArray","dateArray","when","file","files","reader","FileReader","onload","event","bstr","result","workBook","XLSX","read","workSheetName","SheetNames","workSheet","Sheets","fileData","utils","sheet_to_json","header","heads","head","field","splice","listDates","undefined","listTrans","parts","name","extension","getExention","alert","readAsBinaryString","emptyRowsWhenPaging","search","showTitle","toolbar","paging","headerStyle","fontWeight","fontSize","pageSize","pageSizeOptions","showFirstLastPageButtons","columns","minRows","flexDirection","boxSizing","dataset","returnData","xirr","require","dataTable","dataGraph","templateExample","debug1","App","path","exact","component","FileImport","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3864fda8.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport './Button.css'\r\n\r\nconst STYLES = [\r\n    'btn--primary',\r\n    'btn--outline'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--medium',\r\n    'btn--large'\r\n]\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n    return(\r\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","/* eslint-disable no-unused-vars */\r\nexport const MenuItems = [\r\n    {\r\n        title: 'Home',\r\n        url: '/portfolio-tracker',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Stock Research',\r\n        url: '/stock-research',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Portfolio Dashboard',\r\n        url: '/portfolio-dashboard',\r\n        cName: 'nav-links'\r\n    },\r\n    {\r\n        title: 'Import File',\r\n        url: '/import-file',\r\n        cName: 'nav-links-mobile'\r\n    },\r\n]","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport { Button } from '../Button';\r\nimport { MenuItems } from './MenuItems'\r\nimport './Navbar.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n    state = { clicked: false}\r\n\r\n    handleClick = () => {\r\n        this.setState({ clicked: !this.state.clicked })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"NavbarItems\">\r\n                <h1 className=\"navbar-logo\">Portfolio Calculator <i className=\"fas fa-dollar-sign\"></i></h1>\r\n                <div className=\"menu-icon\" onClick={this.handleClick}>\r\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n                </div>\r\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                    {MenuItems.map((item, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <a className={item.cName} href={item.url}>\r\n                                    <b>{item.title}</b>\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n                <Link to='/import-file'>\r\n                    <Button><b>Import File</b></Button>\r\n                </Link>\r\n                \r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","/* eslint-disable no-unused-vars */\r\nimport React, { Component, useState } from 'react'\r\nimport './HomeBox.css'\r\n\r\nclass HomeBox extends Component{\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"clicked: \" + this.props.url);\r\n        window.open(this.props.url, '_blank').focus();\r\n    };\r\n\r\n    handleMouseOver = (e) => {\r\n        e.preventDefault();\r\n        e.target.style.color = 'purple';\r\n    }\r\n\r\n    handleMouseOut = (e) => {\r\n        e.preventDefault();\r\n        e.target.style.color = '';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className='box'>\r\n                    <div className='image-container'>\r\n                        <img src={this.props.image_url} alt=\"image_url\"></img>\r\n                    </div>\r\n\r\n                    <div className='text-box'>\r\n                        <div className='title' onClick={this.handleClick} onMouseOver={this.handleMouseOver} onMouseOut={this.handleMouseOut}>\r\n                            {this.props.title}\r\n                        </div>\r\n\r\n                        <div className='description'>\r\n                            {this.props.description}\r\n                        </div>\r\n\r\n                        <div className='source'>\r\n                            {this.props.source}\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    \r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeBox;","/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { Component, useState } from 'react'\r\nimport './Feed.css'\r\nimport HomeBox from './HomeBox';\r\n\r\nclass Feed extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            box0:{\r\n                title:'',\r\n                description: '',\r\n                url: '',\r\n                image_url: '',\r\n                snippet: '',\r\n                source: ''\r\n            },\r\n            box1:{\r\n                title:'',\r\n                description: '',\r\n                url: '',\r\n                image_url: '',\r\n                snippet: '',\r\n                source: ''\r\n            },\r\n            box2:{\r\n                title:'',\r\n                description: '',\r\n                url: '',\r\n                image_url: '',\r\n                snippet: '',\r\n                source: ''\r\n            },\r\n            rebelInvestorBox:{\r\n                title:'Rebel Investor',\r\n                description: 'Financially independent self-directed investors sharing unbiased and fact-based investment knowledge for family and friends',\r\n                url: 'https://pilotprojectsite.wordpress.com/',\r\n                image_url: 'https://pilotprojectsite.files.wordpress.com/2015/12/cropped-rebelinvestor3.png?w=387',\r\n                source: 'Anonymous'\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var requestOptions = {\r\n            method: 'GET'\r\n        };\r\n\r\n        var params = {\r\n            api_token: 'DoixORqY2kR8bCCiERMVK6Z844d6TNWXJUqY7oFo',\r\n            symbols: 'SPY,DIA,QQQ',\r\n            limit: '3'\r\n        }\r\n\r\n        var query = 'symbols=' + params['symbols'] + '&filter_entities=truelimit&api_token=' + params['api_token'];\r\n\r\n        fetch(\"https://api.marketaux.com/v1/news/all?\" + query, requestOptions)\r\n            .then(response => response.json())\r\n            // .then(json => console.log(json));\r\n            .then(json => this.setState({\r\n                box0: {\r\n                    title: json.data[0].title,\r\n                    description: json.data[0].description,\r\n                    url: json.data[0].url,\r\n                    image_url: json.data[0].image_url,\r\n                    snippet: json.data[0].snippet,\r\n                    source: json.data[0].source\r\n                },\r\n                box1: {\r\n                    title: json.data[1].title,\r\n                    description: json.data[1].description,\r\n                    url: json.data[1].url,\r\n                    image_url: json.data[1].image_url,\r\n                    snippet: json.data[1].snippet,\r\n                    source: json.data[1].source\r\n                },\r\n                box2: {\r\n                    title: json.data[2].title,\r\n                    description: json.data[2].description,\r\n                    url: json.data[2].url,\r\n                    image_url: json.data[2].image_url,\r\n                    snippet: json.data[2].snippet,\r\n                    source: json.data[2].source\r\n                }\r\n            }))\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n                <div className='text-padding'>\r\n                    <HomeBox    \r\n                        title={this.state.box0.title} \r\n                        description={this.state.box0.description} \r\n                        image_url={this.state.box0.image_url} \r\n                        url={this.state.box0.url}\r\n                        source={this.state.box0.source}/>\r\n                    <HomeBox \r\n                        title={this.state.box1.title} \r\n                        description={this.state.box1.description} \r\n                        image_url={this.state.box1.image_url} \r\n                        url={this.state.box1.url}\r\n                        source={this.state.box1.source}/>\r\n                    <HomeBox \r\n                        title={this.state.box2.title} \r\n                        description={this.state.box2.description} \r\n                        image_url={this.state.box2.image_url} \r\n                        url={this.state.box2.url}\r\n                        source={this.state.box2.source}/>\r\n                    <HomeBox\r\n                        title={this.state.rebelInvestorBox.title} \r\n                        description={this.state.rebelInvestorBox.description} \r\n                        image_url={this.state.rebelInvestorBox.image_url} \r\n                        url={this.state.rebelInvestorBox.url}\r\n                        source={this.state.rebelInvestorBox.source}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default Feed;","/* eslint-disable no-lone-blocks */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { Component, useState } from 'react'\r\nimport './IndexBar.css';\r\n\r\nclass IndexBar extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            live_stanPoor: null,\r\n            stanPoor: null,\r\n            prev_stanPoor: null,\r\n            live_dow: null,\r\n            dow: null,\r\n            prev_dow: null,\r\n            live_nasdaq: null,\r\n            nasdaq: null,\r\n            prev_nasdaq: null,\r\n            marketStatus: null,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        fetch(`http://127.0.0.1:5000/index`,\r\n        {\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Credentials': 'true',\r\n                'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            live_stanPoor: data.live_stanPoor,\r\n            stanPoor: data.stanPoor,\r\n            prev_stanPoor: data.prev_stanPoor,\r\n            live_dow: data.live_dow,\r\n            dow: data.dow,\r\n            prev_dow: data.prev_dow,\r\n            live_nasdaq: data.live_nasdaq,\r\n            nasdaq: data.nasdaq,\r\n            prev_nasdaq: data.prev_nasdaq,\r\n            marketStatus: data.marketStatus,\r\n            loading: false\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        let andCharacter = \"&\";\r\n\r\n        const live_stanPoor = this.state.live_stanPoor;\r\n        const prev_stanPoor = this.state.prev_stanPoor;\r\n        const stanPoor = this.state.stanPoor;\r\n\r\n        const live_dow = this.state.live_dow;\r\n        const prev_dow = this.state.prev_dow;\r\n        const dow = this.state.dow;\r\n\r\n        const live_nasdaq = this.state.live_nasdaq;\r\n        const prev_nasdaq = this.state.prev_nasdaq;\r\n        const nasdaq = this.state.nasdaq;\r\n\r\n        const diffStanPoor = (live_stanPoor - prev_stanPoor).toFixed(2);\r\n        const percStanPoor = ((diffStanPoor/live_stanPoor)*100).toFixed(2);\r\n\r\n        const diffDow = (live_dow - prev_dow).toFixed(2);\r\n        const percDow = ((diffDow/live_dow)*100).toFixed(2);\r\n\r\n        const diffNasdaq = (live_nasdaq - prev_nasdaq).toFixed(2);\r\n        const percNasdaq = ((diffNasdaq/live_nasdaq)*100).toFixed(2);\r\n\r\n        return(\r\n            <>\r\n                <div>\r\n                    {this.state.loading ?\r\n                        <div className=\"indexBox\">\r\n                            <b>Loading...</b>\r\n                        </div>\r\n                    :\r\n                    <>\r\n                        {this.state.marketStatus === \"open\" ? \r\n                            <div className=\"indexBox\">\r\n                                <div className=\"marketStatusBox\">\r\n                                    <b><p>Market Open</p></b>\r\n                                </div>\r\n                                <div className=\"index\">\r\n                                    S{andCharacter}P 500 : {stanPoor} Dow Jones : {dow} Nasdaq : {nasdaq}\r\n                                </div>\r\n                            </div>\r\n                        :\r\n                            <div className=\"indexBox\">\r\n                                <div className=\"marketStatusBox\">\r\n                                    <b><p>Market Closed</p></b>\r\n                                </div>\r\n                                <div className=\"index\">\r\n                                    <div className=\"child-index\">\r\n                                       <b>\r\n                                            <div className=\"index-value\">S{andCharacter}P 500 : {live_stanPoor}</div>\r\n                                            {diffStanPoor >= 0 ?<div className=\"index-positive\">+{diffStanPoor} ({percStanPoor}%)</div>\r\n                                            :<div className=\"index-negative\">{diffStanPoor} ({percStanPoor}%)</div>}\r\n                                       </b>\r\n                                    </div>\r\n                                    <div className=\"child-index\">\r\n                                        <b>\r\n                                            <div className=\"index-value\">Dow Jones : {live_dow}</div> \r\n                                            {diffDow >= 0 ?<div className=\"index-positive\">+{diffDow} ({percDow}%)</div>\r\n                                            :<div className=\"index-negative\">{diffDow} ({percDow}%)</div>}\r\n                                        </b>\r\n                                    </div>\r\n                                    <div className=\"child-index\">\r\n                                        <b>\r\n                                            <div className=\"index-value\">Nasdaq : {live_nasdaq}</div>\r\n                                            {diffNasdaq >= 0 ?<div  className=\"index-positive\">+{diffNasdaq} ({percNasdaq}%)</div>\r\n                                            :<div className=\"index-negative\">{diffNasdaq} ({percNasdaq}%)</div>}\r\n                                        </b>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>    \r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexBar;\r\n        ","import React from 'react';\r\nimport Feed from '../components/Feed.js';\r\nimport IndexBar from '../components/IndexBar.js'\r\n\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n            <IndexBar/>\r\n            <Feed/>\r\n        </>\r\n            \r\n    )\r\n}\r\n\r\nexport default Home;","/* eslint-disable no-unused-vars */\r\nimport React, { Component, useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport './BarChart.css';\r\nimport { Button } from '../components/Button.js';\r\n\r\nclass BarChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            list: [],\r\n            accountType: '',\r\n            dateOfTransaction:  '',\r\n            amount: '',\r\n            typeOfTransaction: '',\r\n            newTransaction: {\r\n                accountType: '',\r\n                dateOfTransaction:  '',\r\n                amount: '',\r\n                typeOfTransaction: ''\r\n            },\r\n            data: [],\r\n            dates: [],\r\n            amountList: [],\r\n            colors:[]\r\n        }\r\n    }\r\n\r\n    updateInput(key, value){\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    removeTransaction(id){\r\n        const list = [...this.state.list];\r\n\r\n        const indexToRemove = list.findIndex(x => x.id === id);\r\n\r\n        const data = [...this.state.data];\r\n        const dates = [...this.state.dates];\r\n        const amountList = [...this.state.amountList];\r\n\r\n        const dateToRemove = list[indexToRemove]['dateOfTransaction']\r\n        const dateIndex = dates.indexOf(dateToRemove)\r\n\r\n        const amountToRemove = list[indexToRemove]['amount']\r\n        const amountIndex = amountList.indexOf(parseInt(amountToRemove))\r\n\r\n        const updatedList = list.filter(item => item.id !== id);\r\n        \r\n        //filter the data array\r\n\r\n        //filter arrays \r\n        const updatedDates = []\r\n        const updatedAmounts = []\r\n        const updatedData = []\r\n        const updatedColors = []\r\n\r\n        for(var j = 0; j < dates.length; j++){\r\n            if(j !== dateIndex){\r\n                updatedDates.push(dates[j])\r\n            }\r\n        }\r\n        // console.log(updatedDates)\r\n        \r\n        for(var i = 0; i < amountList.length; i++){\r\n            if(i !== amountIndex){\r\n                updatedAmounts.push(amountList[i])\r\n            }\r\n        }\r\n        console.log(updatedAmounts)\r\n\r\n        for(var a = 0; a < updatedAmounts.length; a++){\r\n            if(updatedAmounts[a] > 0){\r\n                updatedColors.push('#00b33c')\r\n            }\r\n            else{\r\n                updatedColors.push('#ff1a1a') \r\n            }\r\n        }\r\n\r\n        for(var k = 0; k < updatedDates.length; k++){\r\n            updatedData.push({\r\n                amountTotal: updatedAmounts[k],\r\n                date: new Date(updatedDates[k] + 'T00:00:00Z')\r\n            })\r\n        }\r\n        // console.log(updatedData)\r\n        \r\n\r\n        //setState\r\n\r\n        this.setState({\r\n            list: updatedList,\r\n            amountList: updatedAmounts,\r\n            dates: updatedDates,\r\n            data: updatedData,\r\n            colors: updatedColors\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    addTransaction() {\r\n        const newTransaction={\r\n            id: 1 + Math.random(),\r\n\r\n            accountType: this.state.accountType,\r\n            dateOfTransaction: this.state.dateOfTransaction,\r\n            amount: this.state.amount,\r\n            typeOfTransaction: this.state.typeOfTransaction.toUpperCase()\r\n        };\r\n\r\n        const list = [...this.state.list];\r\n\r\n        list.push(newTransaction);\r\n\r\n        const allData = [...this.state.data]\r\n        const dateList = []\r\n        const amountList = []\r\n        const colors = [...this.state.colors]\r\n\r\n        \r\n        if(this.state.typeOfTransaction.toUpperCase() === 'SELL'){\r\n            colors.push('#ff1a1a')\r\n        }\r\n        else{\r\n            colors.push('#00b33c') \r\n        }\r\n        console.log(colors)\r\n        \r\n\r\n        if(this.state.typeOfTransaction.toUpperCase() === 'SELL'){\r\n            const negativeAmount = parseFloat(this.state.amount) * -1\r\n            allData.push({\r\n                amountTotal: negativeAmount,\r\n                date: new Date(this.state.dateOfTransaction + 'T00:00:00Z')\r\n            })\r\n        }\r\n        else{\r\n            allData.push({\r\n                amountTotal: parseFloat(this.state.amount),\r\n                date: new Date(this.state.dateOfTransaction + 'T00:00:00Z')\r\n            })\r\n        }\r\n        const sortedData = allData.sort((a,b) => a.date - b.date)\r\n        console.log(sortedData)\r\n        \r\n        for(var i = 0; i < sortedData.length; i++){\r\n            var obj = sortedData[i];\r\n            dateList.push(obj['date'].toISOString().slice(0, 10))\r\n            amountList.push(obj['amountTotal'])\r\n        }\r\n\r\n        this.setState({\r\n            list,\r\n            accountType: '',\r\n            dateOfTransaction:  '',\r\n            amount: '',\r\n            typeOfTransaction: '',\r\n            newTransaction:{\r\n                accountType: '',\r\n                dateOfTransaction:  '',\r\n                amount: '',\r\n                typeOfTransaction: ''\r\n            },\r\n            data: sortedData,\r\n            dates: dateList,\r\n            amountList: amountList,\r\n            colors: colors\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                {this.state.list.length > 0 ? \r\n                <div className=\"barchart-container\">\r\n                    <Bar\r\n                        data={{\r\n                            // Has to be dates dd/mm/yyyy (example)\r\n                            labels: this.state.dates,\r\n                            datasets: [{\r\n                                data: this.state.amountList,\r\n                                backgroundColor: this.state.colors\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            responsive: true,\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            plugins: {\r\n                                legend: {\r\n                                    display: false\r\n                                }\r\n                            },\r\n                            scales: {\r\n                                xAxes:[{\r\n                                    type: 'time'\r\n                                }]\r\n                            }\r\n                        }}\r\n                        height={10}\r\n                        width={10}\r\n                    />\r\n                </div>\r\n                :\r\n                <div></div>}\r\n\r\n                <div className=\"data-input\">\r\n                    \r\n                    <input className=\"input\" type=\"text\" placeholder=\"Buy or Sell\" value={this.state.typeOfTransaction} onChange={e => this.updateInput('typeOfTransaction', e.target.value)}></input>\r\n                    <input className=\"input\" type=\"text\" placeholder=\"Account Type\" value={this.state.accountType} onChange={e => this.updateInput('accountType', e.target.value)}></input>\r\n                    <input className=\"input\" type=\"date\" placeholder=\"Date of Transaction\" value={this.state.dateOfTransaction} onChange={e => this.updateInput('dateOfTransaction', e.target.value)}></input>\r\n                    <input className=\"input\" type=\"number\" placeholder=\"Amount ($)\" value={this.state.amount} onChange={e => this.updateInput('amount', e.target.value)}></input>\r\n                    <button className=\"transaction-add-button\" onClick={() => this.addTransaction()}>Add</button>\r\n                    \r\n                </div>\r\n\r\n                <div>\r\n                    <ul>\r\n                        {this.state.list.map(item => {\r\n                            return(\r\n                                <li className={item.typeOfTransaction.toUpperCase() === 'SELL' ? \"transaction-list-sell\" : \"transaction-list-buy\"} key={item.id}>\r\n                                    {\"Type of Transaction : \" + item.typeOfTransaction + \" Account Type : \" + item.accountType + \" Year of Transaction : \" + item.dateOfTransaction\r\n                                    + \" Amount : \" + item.amount + \" \"}\r\n                                    <Button onClick={() => this.removeTransaction(item.id)}>X</Button>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </> \r\n        )\r\n    }\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport BarChart from '../components/BarChart.js'\r\n\r\nconst PortfolioDashboard = () => {\r\n    return(\r\n        <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n            }}>\r\n                <h1>Portfolio Dashboard</h1>\r\n            </div>\r\n            \r\n            <BarChart />\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PortfolioDashboard;","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport './IntervalButton.css'\r\n\r\nconst STYLES = [\r\n    'intbtn--primary',\r\n    'intbtn--outline'\r\n]\r\n\r\nconst SIZES = [\r\n    'intbtn--medium',\r\n    'intbtn--large'\r\n]\r\n\r\nexport const IntervalButton = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n    return(\r\n        <button className={`intbtn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}","/* eslint-disable no-unreachable */\r\n/* eslint-disable no-unused-vars */\r\nimport { Legend, Title } from 'chart.js'\r\nimport { func } from 'prop-types'\r\nimport React, { Component, useState } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Button } from './Button'\r\nimport { IntervalButton } from './IntervalButton'\r\nimport './LineChart.css'\r\n\r\nclass LineChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ticket: '',\r\n            interval: '1y',\r\n            date: [],\r\n            stockPrice: [],\r\n            companyName: '',\r\n            validTicket: false,\r\n            weekRange: '',\r\n            prevClose: '',\r\n            open: '',\r\n            ask: '',\r\n            bid: '',\r\n            dayRange: '',\r\n            yTargetEst: '',\r\n            averageVolume: '',\r\n            volume: '', marketCap: '', eps: '', forwardDividend: '', peRatio: '', beta: '', earningsDate: '', exDividendDate: ''\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        fetch(`http://127.0.0.1:5000/stockData?ticket=${this.state.ticket}&interval=${this.state.interval}`) // Include companyName with the same fetch call \r\n        .then(response => response.json())\r\n        // .then(json => console.log(json))\r\n        .then(json => this.setState({\r\n            date: json.date, stockPrice: json.stockPrice, companyName: json.companyName, validTicket: true, attribute: json.attribute, value: json.value,\r\n            weekRange: json.weekRange, prevClose: json.prevClose, open: json.open, ask: json.ask, bid: json.bid, dayRange: json.dayRange, yTargetEst: json.yTargetEst,\r\n            averageVolume: json.averageVolume, volume: json.volume, marketCap: json.marketCap, eps: json.eps, forwardDividend: json.forwardDividend, peRatio: json.peRatio,\r\n            beta: json.beta, earningsDate: json.earningsDate, exDividendDate: json.exDividendDate\r\n        }))\r\n    }\r\n\r\n    handleSubmitInterval(e) {\r\n        e.preventDefault();\r\n        console.log(this.state.interval)\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ticket: e.target.value})\r\n    }\r\n\r\n    handleInterval(e, value) {\r\n        e.preventDefault();\r\n        this.setState({interval: value},\r\n            () => this.handleSubmit(e))  \r\n    }\r\n\r\n    render() {\r\n\r\n        const validTicket = this.state.validTicket;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"stock-finder\">\r\n                    <form onSubmit={(e) => {this.handleSubmit(e)}}>\r\n                        <label className=\"ticker\">Stock ticker :</label>\r\n                        <input className=\"input\" onChange={this.handleChange}></input>\r\n                        <Button type=\"submit\" >\r\n                            Find\r\n                        </Button>\r\n                        <div>\r\n                            <h1 className=\"company-name\">\r\n                                {this.state.companyName}\r\n                            </h1>\r\n                        </div>\r\n                        {/* Add more interval buttons -> 2M, 6M, 1Y, 5Y, 10Y*/}\r\n                        {validTicket\r\n                        ?\r\n                            <div className=\"intervalButtons\">\r\n                                <IntervalButton type=\"submit\" onClick={(e) => this.handleInterval(e, \"2mo\")}>{this.state.interval === '2mo' \r\n                                ? <b className=\"boldIntervalButton\">2M</b> : <div>2M</div>}</IntervalButton>\r\n                                <IntervalButton type=\"submit\" onClick={(e) => this.handleInterval(e, \"6mo\")}>{this.state.interval === '6mo' \r\n                                ? <b className=\"boldIntervalButton\">6M</b> : <div>6M</div>}</IntervalButton> \r\n                                <IntervalButton type=\"submit\" onClick={(e) => this.handleInterval(e, \"1y\")}>{this.state.interval === '1y' \r\n                                ? <b className=\"boldIntervalButton\">1Y</b> : <div>1Y</div>}</IntervalButton>\r\n                                <IntervalButton type=\"submit\" onClick={(e) => this.handleInterval(e, \"5y\")}>{this.state.interval === '5y' \r\n                                ? <b className=\"boldIntervalButton\">5Y</b> : <div>5Y</div>}</IntervalButton> \r\n                                <IntervalButton type=\"submit\" onClick={(e) => this.handleInterval(e, \"10y\")}>{this.state.interval === '10y' \r\n                                ? <b className=\"boldIntervalButton\">10Y</b> : <div>10Y</div>}</IntervalButton> \r\n                            </div>\r\n                        : <div></div>\r\n                        }\r\n                    </form>\r\n                </div>\r\n                \r\n                <div className=\"chart-container\">\r\n                    {validTicket ?\r\n                    <Line\r\n                        data={{\r\n                            labels: this.state.date,\r\n                            datasets:[{\r\n                                data: this.state.stockPrice,\r\n                                borderColor: '#028A0f',\r\n                                fill: false,\r\n                                label: 'Stock Price' \r\n                            }]\r\n                        }}\r\n                        height={10}\r\n                        width={10}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            responsive: true,\r\n                            legend: {\r\n                                display: false\r\n                            },\r\n                            plugins: {\r\n                                legend: {\r\n                                    display: false\r\n                                }\r\n                            }\r\n                        }}\r\n                    /> \r\n                    : <div></div>} \r\n                </div>\r\n\r\n                <div className=\"stock-stats\">\r\n                    {validTicket\r\n                        ? (\r\n                            <>\r\n                                <div className=\"row\">\r\n                                    <div className=\"column\">\r\n                                        <p><b>52 Week Range</b></p>\r\n                                        <p><b>Previous Close</b></p>\r\n                                        <p><b>Open</b></p>\r\n                                        <p><b>Ask</b></p>\r\n                                        <p><b>Bid</b></p>\r\n                                        <p><b>Day's Range</b></p>\r\n                                        <p><b>1y Target Est</b></p>\r\n                                        <p><b>Average Volume</b></p>\r\n                                        <p><b>Volume</b></p>\r\n                                    </div>\r\n                                        \r\n                                    <div className=\"column\">\r\n                                        <p>{this.state.weekRange}</p>\r\n                                        <p>{this.state.prevClose}</p>\r\n                                        <p>{this.state.open}</p>\r\n                                        <p>{this.state.ask}</p>\r\n                                        <p>{this.state.bid}</p>\r\n                                        <p>{this.state.dayRange}</p>\r\n                                        <p>{this.state.yTargetEst}</p>\r\n                                        <p>{this.state.averageVolume}</p>\r\n                                        <p>{this.state.volume}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"column\">\r\n                                        <p><b>Market Cap</b></p>\r\n                                        <p><b>EPS (TTM)</b></p>\r\n                                        <p><b>Forward Dividend (Yield)</b></p>\r\n                                        <p><b>PE Ratio (TTM)</b></p>\r\n                                        <p><b>Beta (5Y Monthly)</b></p>\r\n                                        <p><b>Earnings Date</b></p>\r\n                                        <p><b>Ex-Dividend Date</b></p>\r\n                                    </div>\r\n                                        \r\n                                    <div className=\"column\">\r\n                                        <p>{this.state.marketCap}</p>\r\n                                        <p>{this.state.eps}</p>\r\n                                        <p>{this.state.forwardDividend}</p>\r\n                                        <p>{this.state.peRatio}</p>\r\n                                        <p>{this.state.beta}</p>\r\n                                        <p>{this.state.earningsDate}</p>\r\n                                        <p>{this.state.exDividendDate}</p>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                             </>   \r\n                        )\r\n                        : <div></div> // Returns nothing\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineChart","import React from 'react';\r\nimport LineChart from '../components/LineChart';\r\n\r\nconst StockResearch = () => {\r\n    return(\r\n        <LineChart/>\r\n    )\r\n}\r\n\r\nexport default StockResearch;","export default __webpack_public_path__ + \"static/media/spreadsheet-example.85fa1f49.JPG\";","export default __webpack_public_path__ + \"static/media/debugging-columns.3f794059.JPG\";","export default __webpack_public_path__ + \"static/media/data-table.688c7ddc.JPG\";","export default __webpack_public_path__ + \"static/media/data-graph.b7f1b226.JPG\";","/* eslint-disable no-loop-func */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport XLSX from \"xlsx\";\r\nimport './import-file.css'\r\nimport { Button } from \"../components/Button\";\r\nimport { Line } from 'react-chartjs-2'\r\nimport moment from 'moment'\r\nimport MaterialTable from 'material-table';\r\n\r\nimport templateExample from \"./images/spreadsheet-example.JPG\";\r\nimport debug1 from \"./images/debugging-columns.JPG\";\r\nimport dataTable from \"./images/data-table.JPG\";\r\nimport dataGraph from \"./images/data-graph.JPG\"\r\n\r\nconst EXTENSIONS = ['xlsx', 'xls', 'csv']\r\n\r\nfunction File() {\r\n    const [colDefs, setColDefs] = useState()\r\n    const [data, setData] = useState()\r\n\r\n    const [input, setInput] = useState(false)\r\n    const [dates, setDates] = useState([])\r\n    const [numberAccounts, setNumberAccounts] = useState(0)\r\n\r\n    const getExention = (file) => {\r\n        const parts = file.name.split('.')\r\n        const extension = parts[parts.length - 1]\r\n        return EXTENSIONS.includes(extension) // return boolean\r\n    }\r\n\r\n    const ExcelDateToJSDate = (date) => {\r\n        let converted_date = new Date(Math.round((date - 25568) * 864e5));\r\n        converted_date = String(converted_date).slice(4, 15)\r\n        date = converted_date.split(\" \")\r\n        let day = date[1];\r\n        let month = date[0];\r\n        month = \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(month) / 3 + 1\r\n        if (month.toString().length <= 1)\r\n            month = '0' + month\r\n        let year = date[2];\r\n        return String(month + '-' + day + '-' + year)\r\n    }\r\n\r\n    const convertToJson = (headers, data) => {\r\n        const rows = []\r\n        data.forEach(row => {\r\n            let rowData = {}\r\n            row.forEach((element, index) => {\r\n                if(headers[index] == null) {\r\n                    // do nothing\r\n                }\r\n                else{\r\n                    if (index === 0 && headers[0].toLowerCase() === \"date\"){\r\n                        rowData[headers[0]] = ExcelDateToJSDate(element)\r\n                    }\r\n                    else{\r\n                        rowData[headers[index]] = element\r\n                    }\r\n                }\r\n            })\r\n            rows.push(rowData)\r\n\r\n        });\r\n        console.log(rows)\r\n        return rows\r\n    }\r\n\r\n    const importExcel = (e) => {\r\n        const file = e.target.files[0]\r\n\r\n        const reader = new FileReader()\r\n        reader.onload = (event) => {\r\n        //parse data\r\n\r\n        const bstr = event.target.result\r\n        const workBook = XLSX.read(bstr, { type: \"binary\" })\r\n\r\n        //get first sheet\r\n        const workSheetName = workBook.SheetNames[0]\r\n        const workSheet = workBook.Sheets[workSheetName]\r\n        //convert to array\r\n        const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 })\r\n        // console.log(fileData)\r\n        const headers = fileData[0]\r\n        const heads = headers.map(head => ({ title: head, field: head }))\r\n        setColDefs(heads)\r\n\r\n        //removing header\r\n        fileData.splice(0, 1)\r\n\r\n\r\n        setData(convertToJson(headers, fileData))\r\n\r\n        // Set all variables of the graph\r\n\r\n        const listDates = []\r\n\r\n        convertToJson(headers, fileData).forEach(element => {\r\n            if(element.Date !== undefined){\r\n                listDates.push(element.Date)\r\n            }\r\n        })\r\n        \r\n        setDates(listDates)\r\n        // number of accounts\r\n        setNumberAccounts(heads.length - 1)\r\n\r\n        // data from first account\r\n        const listTrans = []\r\n        convertToJson(headers, fileData).forEach((element) => {\r\n            if(element.Date !== undefined){\r\n                listTrans.push(element[Object.keys(element)[1]])\r\n            } \r\n        })\r\n\r\n        setInput(true)\r\n    }\r\n\r\n\r\n    if (file) {\r\n        if (getExention(file)) {\r\n            reader.readAsBinaryString(file)\r\n        }\r\n        else {\r\n            alert(\"Invalid file input, Select Excel file\")\r\n        }\r\n        } else {\r\n            setData([])\r\n            setColDefs([])\r\n        }\r\n    }\r\n\r\n    const returnTotal = () => {\r\n        const total = []\r\n        let j = 0;\r\n        while(j < data.length){\r\n            let value = 0\r\n            let k = 0\r\n            while(k < numberAccounts){\r\n                value += data[j][Object.keys(data[j])[k+1]];\r\n                k++\r\n            }\r\n            total.push(value)\r\n            j++;\r\n        }\r\n        console.log(total)\r\n\r\n        return total;\r\n    }\r\n\r\n    const returnData = () => {\r\n        const dataset = []\r\n        const colors = ['#ff0000','#ff8000','#ffff00','#40ff00','#0000ff','#8000ff','#ff00bf']\r\n        \r\n\r\n        for(let i = 0; i < numberAccounts; i++){\r\n\r\n            const listTrans = []\r\n\r\n            data.forEach((element) => {\r\n                if(element.Date !== undefined){\r\n                    \r\n                    listTrans.push(element[Object.keys(element)[i+1]]);\r\n                } \r\n            })\r\n\r\n            dataset.push({\r\n                label: colDefs[i+1].title,\r\n                data: listTrans,\r\n                borderColor: colors[i]\r\n            })\r\n        }\r\n\r\n        dataset.push({\r\n            label: 'Total',\r\n            data: returnTotal(),\r\n            borderColor: '#000000'\r\n        })\r\n\r\n        return dataset\r\n    }\r\n\r\n    const xirr = () => {\r\n        var xirr = require('xirr');\r\n        var rate = xirr(rateArray());\r\n\r\n        return (rate*100).toFixed(2);\r\n    }\r\n\r\n    const rateArray = () => {\r\n        const totalArray = returnTotal()\r\n        const dateArray = dates\r\n\r\n        const rateArray = []\r\n        for(let i = 0; i < totalArray.length; i++){\r\n            rateArray.push({\r\n                amount: totalArray[i],\r\n                when: new Date(dateArray[i])\r\n            })\r\n        }\r\n        console.log(rateArray)\r\n        return rateArray;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"import\">\r\n                <label className=\"custom-file-upload\">\r\n                    <input type=\"file\" onChange={importExcel} />Choose File\r\n                </label>\r\n                \r\n                \r\n                <div>\r\n                    {input ? \r\n                    <>\r\n                    <div className=\"table\">\r\n                        <MaterialTable \r\n                            title=\"Portfolio Data\" \r\n                            options={{\r\n                                emptyRowsWhenPaging: false, \r\n                                search: false,\r\n                                showTitle: true,\r\n                                toolbar:false,\r\n                                paging: true,\r\n                                headerStyle:{fontWeight: 'bold', fontSize: 20},\r\n                                pageSize: 10,\r\n                                pageSizeOptions:[10,20,30],\r\n                                showFirstLastPageButtons: false\r\n                            }}\r\n                            data={data} \r\n                            columns={colDefs}\r\n                            minRows={0}\r\n                        />\r\n                    </div>\r\n                    <div className=\"title\">\r\n                        Insert Title Here\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <div className=\"line-chart-container\">\r\n                            <Line\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"row\",\r\n                                    boxSizing: \"content-box\"\r\n                                }}\r\n                                data={{\r\n                                    labels:dates,\r\n                                    datasets:returnData()\r\n                                }}\r\n                                height={10}\r\n                                width={10}\r\n                                options={{\r\n                                    maintainAspectRatio: false,\r\n                                    responsive: true\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"interest-rate\">\r\n                            Internal Rate of Return<br/> {xirr()}%\r\n                        </div>\r\n                    </div>    \r\n                    </>\r\n                    :\r\n                    <div>\r\n                        <h4>Import your Excel portfolio spreadsheet to access additional statistics on your portfolio</h4>\r\n                        <img src={dataTable} alt=\"data Table\" width=\"900\" height=\"400\"></img>\r\n                        <img src={dataGraph} alt=\"data Graph\" width=\"900\" height=\"400\"></img> \r\n\r\n                        <h4>Before importing your file</h4>\r\n                        <ul>\r\n                            <li>Follow the following template in a Excel spreadsheet</li>\r\n                            <img src={templateExample} alt=\"Excel template\"></img>\r\n                            <li>The first column must be named 'Date' followed by the names of your accounts</li>\r\n                            <li>The dates must be in the following format : YYYY-MM-DD</li>\r\n                        </ul>\r\n                        \r\n                        <h4>Debugging</h4>\r\n                        <ul>\r\n                            <li>The Excel file must be closed on the computer in order to import it on the website</li>\r\n                            <li>Remove the columns and rows after your data by selecting the rows/columns and right clicking 'delete' as seen below</li>\r\n                            <img src={debug1} alt=\"Debug 1\"></img>\r\n                        </ul>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </>\r\n  );\r\n}\r\n\r\nexport default File;\r\n\r\n// Excel : =XIRR(B2:B14,A2:A14,0.1)\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport './App.css';\r\nimport Navbar from './components/navbar/Navbar';\r\n\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport Home from './pages/index'\r\nimport PortfolioDashboard from './pages/portfolio-dashboard';\r\nimport StockResearch from './pages/stock-research';\r\nimport FileImport from './pages/import-file'\r\nimport IndexBar from './components/IndexBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path='/portfolio-tracker' exact component={Home}/>\r\n          <Route path='/stock-research' component={StockResearch} />\r\n          <Route path='/portfolio-dashboard' exact component={PortfolioDashboard} />\r\n          <Route path='/import-file' component={FileImport} />\r\n        </Switch>\r\n      </Router>\r\n      \r\n    </>\r\n  )\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}